#!/usr/bin/env python3
"""
üöÄ OPTIMISATIONS RADICALES POUR R√âDUIRE ENCORE PLUS LES FRAIS
Configuration ultra-optimis√©e
"""

# Configuration actuelle vs optimis√©e
CURRENT_CONFIG = {
    'BASE_POSITION_SIZE_PERCENT': 20,  # 20% du capital
    'MIN_POSITION_SIZE_EUR': 500,      # 500‚Ç¨ minimum
    'MAX_OPEN_POSITIONS': 3,           # 3 positions max
    'MAX_TRADES_PER_PAIR': 1,          # 1 trade par paire
}

ULTRA_OPTIMIZED_CONFIG = {
    'BASE_POSITION_SIZE_PERCENT': 30,  # 30% du capital (positions plus grosses)
    'MIN_POSITION_SIZE_EUR': 1000,     # 1000‚Ç¨ minimum (divise par 2 les trades)
    'MAX_OPEN_POSITIONS': 2,           # 2 positions max (plus s√©lectif)
    'MAX_TRADES_PER_PAIR': 1,          # Reste 1
    'COOLDOWN_BETWEEN_TRADES': 300,    # 5min minimum entre trades
    'MIN_SIGNAL_STRENGTH': 0.7,       # Signaux plus forts seulement
}

def show_fee_reduction_impact():
    print("üîß === OPTIMISATIONS RADICALES FRAIS ===")
    print()
    
    # Calcul impact r√©el
    current_daily_trades = 263  # Trades actuels par jour
    fees_per_trade = 1.0        # ~1‚Ç¨ de frais par trade moyen
    
    print("üìä CONFIGURATION ACTUELLE:")
    print(f"   ‚Ä¢ Trades/jour: {current_daily_trades}")
    print(f"   ‚Ä¢ Frais/jour: ~{current_daily_trades * fees_per_trade:.0f}‚Ç¨")
    print(f"   ‚Ä¢ Frais/mois: ~{current_daily_trades * fees_per_trade * 30:.0f}‚Ç¨")
    print()
    
    # Optimisations progressives
    optimizations = [
        {
            'name': '1Ô∏è‚É£ BNB D√©sactiv√© (FAIT)',
            'reduction': 0.77,
            'daily_fees': current_daily_trades * fees_per_trade * (1 - 0.77)
        },
        {
            'name': '2Ô∏è‚É£ Position MIN 1000‚Ç¨',
            'reduction': 0.50,  # -50% trades
            'daily_fees': current_daily_trades * fees_per_trade * (1 - 0.77) * (1 - 0.50)
        },
        {
            'name': '3Ô∏è‚É£ Signaux Plus S√©lectifs',
            'reduction': 0.30,  # -30% trades suppl√©mentaires
            'daily_fees': current_daily_trades * fees_per_trade * (1 - 0.77) * (1 - 0.50) * (1 - 0.30)
        },
        {
            'name': '4Ô∏è‚É£ Cooldown 5min',
            'reduction': 0.20,  # -20% trades suppl√©mentaires
            'daily_fees': current_daily_trades * fees_per_trade * (1 - 0.77) * (1 - 0.50) * (1 - 0.30) * (1 - 0.20)
        }
    ]
    
    cumulative_fees = current_daily_trades * fees_per_trade
    
    for opt in optimizations:
        print(f"‚úÖ {opt['name']}")
        print(f"   Frais/jour: {opt['daily_fees']:.1f}‚Ç¨")
        print(f"   √âconomie: -{(cumulative_fees - opt['daily_fees']):.0f}‚Ç¨/jour")
        print(f"   R√©duction totale: {(1 - opt['daily_fees']/cumulative_fees)*100:.1f}%")
        print()
    
    final_fees = optimizations[-1]['daily_fees']
    total_reduction = (1 - final_fees/cumulative_fees) * 100
    
    print("üéØ R√âSULTAT FINAL:")
    print(f"   üí∞ Frais AVANT: {cumulative_fees:.0f}‚Ç¨/jour")
    print(f"   üíö Frais APR√àS: {final_fees:.1f}‚Ç¨/jour")
    print(f"   üìà R√âDUCTION: {total_reduction:.1f}%")
    print(f"   üí∏ √âCONOMIE: {(cumulative_fees - final_fees)*30:.0f}‚Ç¨/mois")

def generate_ultra_config():
    print("\nüîß === CONFIGURATION ULTRA-OPTIMIS√âE ===")
    print()
    
    config_code = '''
# CONFIGURATION ULTRA-OPTIMIS√âE - FRAIS R√âDUITS AU MAXIMUM

# Position sizing - Plus grosses positions = moins de trades
BASE_POSITION_SIZE_PERCENT = 30  # 30% capital (vs 20% actuel)
MIN_POSITION_SIZE_EUR = 1000     # 1000‚Ç¨ min (vs 500‚Ç¨) = -50% trades

# Limitations strictes
MAX_OPEN_POSITIONS = 2           # 2 max (vs 3) = plus s√©lectif
MAX_TRADES_PER_PAIR = 1          # Inchang√©
COOLDOWN_BETWEEN_TRADES = 300    # 5min cooldown = √©vite spam

# S√©lectivit√© signaux
MIN_SIGNAL_STRENGTH = 0.7        # Signaux forts uniquement
MIN_VOLUME_24H = 10000000        # Haute liquidit√© seulement

# Horaires optimis√©s (√©viter high volatility)
TRADING_HOURS = {
    'start': 9,   # 9h (ouverture europ√©enne)
    'end': 17,    # 17h (avant cl√¥ture US)
    'break_start': 12,  # Pause d√©jeuner
    'break_end': 14
}

# Paires ultra-s√©lectives
PRIORITY_PAIRS = ['EURBTC', 'EURETH', 'EURUSDT']  # Top 3 seulement
'''
    
    print(config_code)
    print()
    print("üìä IMPACT ATTENDU:")
    print("   ‚Ä¢ -77% frais BNB (d√©j√† fait)")
    print("   ‚Ä¢ -50% trades (position 1000‚Ç¨)")
    print("   ‚Ä¢ -30% trades (signaux s√©lectifs)")
    print("   ‚Ä¢ -20% trades (cooldown)")
    print("   ‚Ä¢ TOTAL: -92% de frais !")

if __name__ == "__main__":
    show_fee_reduction_impact()
    generate_ultra_config()
